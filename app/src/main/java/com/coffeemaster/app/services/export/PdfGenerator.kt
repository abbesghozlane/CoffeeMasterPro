package com.coffeemaster.app.services.export

import android.graphics.Canvas
import android.graphics.Paint
import android.graphics.pdf.PdfDocument
import com.coffeemaster.app.models.Report
import java.io.ByteArrayOutputStream

object PdfGenerator {

    fun generateReportPdf(report: Report): ByteArray {
        // Create a simple PDF document with header and summary text.
        val pageWidth = 595 // A4 ~ 595x842 points
        val pageHeight = 842

        val document = PdfDocument()

        val pageInfo = PdfDocument.PageInfo.Builder(pageWidth, pageHeight, 1).create()
        val page = document.startPage(pageInfo)
        val canvas: Canvas = page.canvas

        val paint = Paint()
        paint.textSize = 18f
        paint.isFakeBoldText = true
        val startX = 40f
        var y = 60f

        canvas.drawText("Coffee Master Report", startX, y, paint)
        y += 30f

        paint.textSize = 12f
        paint.isFakeBoldText = false
        canvas.drawText("Report ID: ${report.id}", startX, y, paint)
        y += 20f
        canvas.drawText("Generated by: ${report.generatedBy}", startX, y, paint)
        y += 20f
        canvas.drawText("Generated at: ${report.generatedAt}", startX, y, paint)
        y += 30f

        // Summary (if present)
        try {
            val summary = report.data.summary
            canvas.drawText("Total Revenue: ${summary.totalRevenue}", startX, y, paint)
            y += 18f
            canvas.drawText("Total Expenses: ${summary.totalExpenses}", startX, y, paint)
            y += 18f
            canvas.drawText("Net Profit: ${summary.netProfit}", startX, y, paint)
            y += 18f
            canvas.drawText("Best Selling: ${summary.bestSellingProduct}", startX, y, paint)
            y += 18f
        } catch (e: Exception) {
            // ignore missing summary
        }

        document.finishPage(page)

        val output = ByteArrayOutputStream()
        document.writeTo(output)
        document.close()

        return output.toByteArray()
    }
}
